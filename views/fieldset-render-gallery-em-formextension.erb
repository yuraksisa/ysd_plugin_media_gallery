<form name="gallery_photo" target="gallery_photo_uploader" 
      method="POST" 
      enctype="multipart/form-data" 
      action="/photo_gallery/photo" 
      style="display:none">
  <input type="file" name="photo_file" id="photo_file" accept="<%= photo_accept %>"/>
  <input type="hidden" id="photo_album_prefix" name="photo_album_prefix" value="<%= photo_album_prefix %>"/>
  <input type="hidden" id="photo_width" name="photo_width" value="<%= photo_width %>"/>
  <input type="hidden" id="photo_height" name="photo_height" value="<%= photo_height %>"/>
  <input type="hidden" id="photo_album" name="photo_album"/>
  <input type="hidden" id="photo_id" name="photo_id"/>
  <input type="hidden" id="photo_name" name="photo_name"/>
  <input type="hidden" id="photo_description" name="photo_description">
</form>

<iframe id="gallery_photo_uploader" name="gallery_photo_uploader" style="display:none">
    Your system does not support iframes
</iframe>

<script type="text/javascript">

  /* ----------------------------
     Attachment Plugin
     ---------------------------- */

require(['jquery', 'YSDEntityManagementComplementHooks', 'YSDMemoryDataSource', 'YSDRemoteDataSource',
         'YSDListViewer', 'YSDListManagement', 'YSDEventTarget', 'YSDjson2' ], 
        function($, EntityManagementComplementHooks, MemoryDataSource, RemoteDataSource, ListViewer, ListManagement, EventTarget ) {

     
  FileUploader = function(formName, inputFileId, iframeId) {

    this.model = new FileUploaderModel(formName, inputFileId, iframeId);
    this.controller = new FileUploaderController(this.model);
    this.view = new FileUploaderView(this.model, this.controller);

    this.model.setView(this.view);
    
    this.addListener = function(type, listener) { /* addListener */
      this.model.addListener(type, listener);	
    }

    this.removeListener = function(type, listener) { /* removeListener */
      this.model.removeListener(type, listener);  	  
    }

    this.uploadFile = function() {
      this.controller.addNewFileClick();
    }

    this.view.init();

  }
  
  FileUploaderModel = function(formName, inputFileId, iframeId) {
    
    this.formName = formName;
    this.inputFileId = inputFileId;
    this.iframeId = iframeId;

	this.events = new EventTarget();	
  	this.state = 'initial';
  	this.file = null;

    this.addListener = function(type, listener) { /* addListener */
      this.events.addEventListener(type, listener);	
    }

    this.removeListener = function(type, listener) { /* removeListener */
      this.events.removeEventListener(type, listener);  	  
    }

  	this.setView = function(view) {
  	  this.view = view;	
  	}
  	
  	this.changeState = function(action) { /* change state */
  	  
  	  switch (action) {
  	  
  	    case 'send_request':
  	      this.state = 'uploading_file'
  	      break;
  	  	  	  	
  	  	case 'file_uploaded_ok':
  	  	  this.state = 'file_uploaded';
  	  	  this.events.fireEvent({type:'file_uploaded', data: {file: this.file}});
  	  	  break;
  	  	  
  	  	case 'file_uploaded_error':
  	  	  this.state = 'error_uploading_file';
  	  	  break;
  	  }
  	  
  	  this.view.stateChanged(this.state);
  		
  	}
  	
  	this.uploadFile = function(file) { /* Upload the attachment */
  	  
  	  this.changeState('send_request');
  	  document.forms[this.formName].submit(); // Submits the form to upload the file
  	
  	}
  	
  }

  FileUploaderController = function(model) {
    
    this.model = model;

    this.addNewFileClick = function() { /* The user clicks on the input file */
  	  var result = $(document.forms[this.model.formName][this.model.inputFileId]).click();
    }

  	this.fileSelected = function() { /* A file is selected to be uploaded */
  	  this.model.uploadFile();
  	}    

  }

  FileUploaderView = function(model, controller) {

    this.model = model;
    this.controller = controller;
    this.showingFileSelect = false;
    
    this.init = function() {
      
      var self = this;
      var controller = this.controller;
      var model = this.model;
     		
      $(document.forms[this.model.formName][this.model.inputFileId]).bind('change', function(event) {
  	  	if ($(document.forms[self.model.formName][self.model.inputFileId]).val() != '') {
  	  	  controller.fileSelected();
  	  	}
      });
         
      $(document.getElementById(this.model.iframeId)).bind('load', function(event){
        try 
        {
          if (model.state == 'uploading_file') { // Manages the event only when uploading the image
            model.file = JSON.parse(frames[model.iframeId].document.body.innerHTML);
         	model.changeState('file_uploaded_ok');
          }                  	     
        }
        catch (e)
        { 
          model.changeState('file_uploaded_error');
        }      	
      	
      });
      
    }
    
    this.stateChanged = function(event) { /* State changed */
    	
    }

  }

  /* ----------------- Gallery Plugin ----------------- */

  GalleryPlugin = function() {
  
    this.selector = null;     /* ListManagement */
    this.fileUploader = null; /* FileUploader */

    this.onNew = function() {
      this.configForm(null);
    }
    
    this.onEdit = function(entity) {
	  this.configForm(entity);
      this.albumNameConfiguration();
    }
    
    this.albumNameConfiguration = function() {
      
      if ($('input[name=album_name]').val() != '') {
      	$(document.forms['gallery_photo']['photo_album']).val($('input[name=album_name]').val());
        $('input[name=album_name]').attr('readonly', 'readonly');
      }

    }

    this.configForm = function(entity) {
      
      var self = this;
      var albumDataSource = null;
      
      if (entity && entity.album_name) {
        albumDataSource = new RemoteDataSource('/photos/' + entity.album_name, {id:'id', description: function(data){return '<img src="'+ data.thumbnails[0].thumbnail_url + '" class="album-photo" data-photo-path="' + '/album/' + entity.album_name + '/photo/' + data.id + '"' + 'data-photo-url-tiny="' + data.thumbnails[0].thumbnail_url + '"' + 'data-photo-url-small="' + data.thumbnails[1].thumbnail_url + '"' + 'data-photo-url-medium="' + data.thumbnails[2].thumbnail_url + '"' + 'data-photo-url-full="' + data.image_url + '"/>' }});
      }
      else {
        albumDataSource = new MemoryDataSource([]);
      }

      this.selector = new ListManagement('gallery_form', 
                                         'gallery', 
                                         albumDataSource);
                 
      this.fileUploader = new FileUploader('gallery_photo', 'photo_file', 'gallery_photo_uploader');
     
      

      this.fileUploader.addListener('file_uploaded', function(event) {
        var data = event.data.file;
        var album_name = data.album.name;
        if (entity && entity.album_name && entity.album_name != '') {
          album_name = entity.album_name;
        }
        self.selector.addElement({id:data.id, description: '<img src="' + data.thumbnails[0].thumbnail_url + '" class="album-photo" data-photo-path="' + '/album/' + album_name + '/photo/' + data.id + '"' + ' data-photo-url-tiny="' + data.thumbnails[0].thumbnail_url + '"' + ' data-photo-url-small="' + data.thumbnails[1].thumbnail_url + '"' + ' data-photo-url-medium="' + data.thumbnails[2].thumbnail_url + '"' + ' data-photo-url-full="' + data.image_url + '"/>'});

        if ($('input[name=album_name]').val() == '') {
          $('input[name=album_name]').val(album_name);
          self.albumNameConfiguration();	
        }
        if ($('input[name=photo_path]').val() == '') {
          var photo_path = '/album/' + album_name + '/photo/' + data.id;
          $('input[name=photo_path]').val(photo_path);
          $('input[name=photo_url_tiny]').val(data.thumbnails[0].thumbnail_url);
          $('input[name=photo_url_small]').val(data.thumbnails[1].thumbnail_url);
          $('input[name=photo_url_medium]').val(data.thumbnails[2].thumbnail_url);
          $('input[name=photo_url_full]').val(data.image_url);
          $('.album-photo[data-photo-path="'+photo_path+'"]').addClass('album-main-photo');
        }
      });      

      this.selector.addListener('add_element_button_click', function(event) {
      	self.fileUploader.uploadFile(); 
      });

      this.selector.addListener('elements_updated', function() {
          self.selectMainPhoto();
          self.configSelectMainPhotoEvent();
        });

      this.selector.addListener('delete_element_button_click', function(event) {

      });
      
    }

    this.selectMainPhoto = function() {

      var photo_path = $('#photo_path').val();

      if (photo_path && photo_path != '') {
        $('.album-photo[data-photo-path="'+photo_path+'"]').addClass('album-main-photo');
      }

    }

    this.configSelectMainPhotoEvent = function() {

      $('.album-photo').unbind('click');
      $('.album-photo').bind('click', function() { 
        $('.album-photo').removeClass('album-main-photo');
        $(this).addClass('album-main-photo');
        $('#photo_path').val($(this).attr('data-photo-path'));
        $('#photo_url_tiny').val($(this).attr('data-photo-url-tiny'));
        $('#photo_url_small').val($(this).attr('data-photo-url-small'));        
        $('#photo_url_medium').val($(this).attr('data-photo-url-medium'));
        $('#photo_url_full').val($(this).attr('data-photo-url-full'));
      });

    }

  }
  	
  var galleryPlugin = new GalleryPlugin();
  EntityManagementComplementHooks.register(galleryPlugin);	
	
});
</script>